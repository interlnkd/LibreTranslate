version: "3.8"

services:
  libretranslate:
    container_name: libretranslate
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "5001:5001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python scripts/healthcheck.py"]
      interval: 10s
      timeout: 4s
      retries: 4
      start_period: 5s
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - SLACK_CHANNEL_ID=${SLACK_CHANNEL_ID}
      - SLACK_TOKEN=${SLACK_TOKEN}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ENV_ENVIRONMENT=${ENV_ENVIRONMENT}
    volumes:
      - .:/app:rw
      - libretranslate_models:/app/.local:rw
    depends_on:
      - redis
    command:
      [
        "gunicorn",
        "wsgi:app",
        "--workers",
        "6",
        "--worker-class",
        "uvicorn.workers.UvicornWorker",
        "-b",
        "0.0.0.0:5001",
        "--timeout",
        "300000000",
        "--reload"
      ]

  libretranslate_celery:
    container_name: libretranslate_celery
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: python -m celery -A celery_tasks.celery worker --loglevel=info --max-tasks-per-child=1
    depends_on:
      - libretranslate
      - redis
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - SLACK_CHANNEL_ID=${SLACK_CHANNEL_ID}
      - SLACK_TOKEN=${SLACK_TOKEN}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ENV_ENVIRONMENT=${ENV_ENVIRONMENT}
    volumes:
      - .:/app:rw
      - libretranslate_models:/app/.local:rw

  redis:
    image: redis:latest
    container_name: libretranslate_redis
    restart: unless-stopped

volumes:
  libretranslate_models:
